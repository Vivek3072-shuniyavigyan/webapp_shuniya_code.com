{"ast":null,"code":"var _jsxFileName = \"/Users/j/Documents/GitHub/test_sv/src/components/Editor.js\";\nimport React from \"react\";\nimport './editor.css';\nimport Helmet from 'react-helmet';\nimport { connect, Provider } from 'react-redux';\nimport { editing } from '../actions/code_editor';\nimport { render } from \"@testing-library/react\";\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Editor extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input_file_name: '',\n      code_file_name: '',\n      mobile_number: '',\n      input_flag: ''\n    };\n\n    this.submitHandler = () => {\n      var getText = document.getElementById('texteditor').value;\n      console.log(getText);\n      var base64_encode = btoa(unescape(encodeURIComponent(getText)));\n      console.log(base64_encode);\n      this.props.editing('a.py', '1', base64_encode, 'ABSENT');\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    this.props.output !== undefined ? console.log(this.props.output) : console.log('no');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"stylesheet\",\n          href: \"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  output: state.code_editor.output,\n  isUploading: state.code_editor.isUploading\n});\n\nexport default connect(mapStateToProps, {\n  editing\n})(Editor);","map":{"version":3,"sources":["/Users/j/Documents/GitHub/test_sv/src/components/Editor.js"],"names":["React","Helmet","connect","Provider","editing","render","Loader","Editor","Component","state","input_file_name","code_file_name","mobile_number","input_flag","submitHandler","getText","document","getElementById","value","console","log","base64_encode","btoa","unescape","encodeURIComponent","props","componentDidMount","output","undefined","mapStateToProps","code_editor","isUploading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACJC,MAAAA,eAAe,EAAE,EADb;AAEJC,MAAAA,cAAc,EAAE,EAFZ;AAGJC,MAAAA,aAAa,EAAE,EAHX;AAIJC,MAAAA,UAAU,EAAE;AAJR,KAFyB;;AAAA,SAYjCC,aAZiC,GAYjB,MAAM;AAClB,UAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAApD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,UAAIM,aAAa,GAAGC,IAAI,CAACC,QAAQ,CAACC,kBAAkB,CAACT,OAAD,CAAnB,CAAT,CAAxB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AACA,WAAKI,KAAL,CAAWrB,OAAX,CAAmB,MAAnB,EAA2B,GAA3B,EAAgCiB,aAAhC,EAA+C,QAA/C;AACH,KAlBgC;AAAA;;AAQjCK,EAAAA,iBAAiB,GAAG,CAEnB;;AAUDrB,EAAAA,MAAM,GAAG;AACL,SAAKoB,KAAL,CAAWE,MAAX,KAAsBC,SAAtB,GAAkCT,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAWE,MAAvB,CAAlC,GAAmER,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAnE;AACA,wBACI;AAAA,6BACI,QAAC,MAAD;AAAA,+BACI;AAAM,UAAA,GAAG,EAAC,YAAV;AAAuB,UAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAyBH;;AA/CgC;;AAiDrC,MAAMS,eAAe,GAAGpB,KAAK,KAAK;AAC9BkB,EAAAA,MAAM,EAAElB,KAAK,CAACqB,WAAN,CAAkBH,MADI;AAE9BI,EAAAA,WAAW,EAAEtB,KAAK,CAACqB,WAAN,CAAkBC;AAFD,CAAL,CAA7B;;AAKA,eAAe7B,OAAO,CAClB2B,eADkB,EAElB;AAAEzB,EAAAA;AAAF,CAFkB,CAAP,CAGbG,MAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport './editor.css'\r\nimport Helmet from 'react-helmet'\r\nimport { connect, Provider } from 'react-redux';\r\nimport { editing } from '../actions/code_editor';\r\nimport { render } from \"@testing-library/react\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nclass Editor extends React.Component {\r\n\r\n    state = {\r\n        input_file_name: '',\r\n        code_file_name: '',\r\n        mobile_number: '',\r\n        input_flag: ''\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    submitHandler = () => {\r\n        var getText = document.getElementById('texteditor').value;\r\n        console.log(getText)\r\n        var base64_encode = btoa(unescape(encodeURIComponent(getText)))\r\n        console.log(base64_encode)\r\n        this.props.editing('a.py', '1', base64_encode, 'ABSENT')\r\n    }\r\n\r\n    render() {\r\n        this.props.output !== undefined ? console.log(this.props.output) : console.log('no')\r\n        return (\r\n            <div>\r\n                <Helmet>\r\n                    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" />\r\n                </Helmet>\r\n                {/* <div className='row'>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6\">\r\n                        <div className=\"menu-bar\">\r\n                            <button className=\"btn btn-sm btn-primary submit-btn\" style={{ position: 'relative', top: '20%' }} onClick={this.submitHandler}>Submit</button>\r\n                        </div>\r\n                        <textarea id=\"texteditor\" className=\"editor_area\">पश्य(\"hello ,world\")</textarea>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6\">\r\n                        <div className=\"menu-bar\"></div>\r\n\r\n\r\n                        {this.props.output != undefined ?\r\n                            <textarea className=\"output_area\">{this.props.output}</textarea> :\r\n                            <Loader style={{ display: 'inline-block', transform: 'translateY(30%)', color:'#007bff' }} type=\"Puff\" height={100} width={100}></Loader>\r\n                        }\r\n\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    output: state.code_editor.output,\r\n    isUploading: state.code_editor.isUploading\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { editing },\r\n)(Editor);"]},"metadata":{},"sourceType":"module"}